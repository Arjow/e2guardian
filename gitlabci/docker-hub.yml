docker-hub-build:
  stage: Docker-hub-build
  image: docker:dind
  before_script:
    - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_TOKEN" $DOCKER_HUB_REGISTRY
  script:
    - cd $CI_PROJECT_DIR && cp gitlabci/docker-ci/Dockerfile ./
    - docker build --build-arg E2_VERSION="$CI_COMMIT_BRANCH" --pull -t $CONTAINER_BUILD_NOPROD_NAME_AMD64 .
    - docker push $CONTAINER_BUILD_NOPROD_NAME_AMD_64

variables:
  CONTAINER_PROD_IMAGE: $HUB_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
  CONTAINER_CLIENT_IMAGE: debian:latest
  CONTAINER_TEST_NAME: e2guardian
  CONTAINER_BUILD_NOPROD_NAME_AMD64: $HUB_REGISTRY_IMAGE:build-noprod-amd64

.services:
  services:
    - name: $CONTAINER_BUILD_NOPROD_NAME_AMD64
      alias: e2guardian
  image: $CONTAINER_CLIENT_IMAGE

docker-hub-test:
  stage: Docker-hub-test
  extends: .services
  script:
    - apt update && apt install -y curl
    - export https_proxy=http://$CONTAINER_TEST_NAME:8080 && curl -k https://www.google.fr
  variables:
    HOSTNAME: e2pipeline

dive:
  image: 
    name: wagoodman/dive:latest
    entrypoint: [""]
  stage: Docker-hub-test
  script:
    - docker pull $CONTAINER_BUILD_NOPROD_NAME_AMD64
    - dive $CONTAINER_BUILD_NOPROD_NAME_AMD64
  variables:
    CI: "true"

push-docker-hub:
  stage: Docker-hub-pushtag
  image: docker:dind
  before_script:
    - docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_TOKEN" $DOCKER_HUB_REGISTRY
  script:
    - docker pull $CONTAINER_BUILD_NOPROD_NAME_AMD64
    - docker tag $CONTAINER_BUILD_NOPROD_NAME $CONTAINER_PROD_IMAGE:amd64
    - docker push $CONTAINER_PROD_IMAGE_AMD64:amd64
