stages:
        #- build:debian
        #- create-debian-package
        #- TestDebian
        #- build:ubuntu
        #- create-ubuntu-package
        #- TestUbuntu
  ## Works in progress ...
- build:raspbian
#- create-raspbian-package
#
# 
Package Docker Image Raspbian:
  stage: build:raspbian
  artifacts:
   expire_in: 1 hour
   name: build-raspbian
   paths:
    - /builds   
  image: amd64/debian:stable
  variables:
    OS: "raspbian" 
  script:
    - apt update
    - apt-get -y upgrade
    - apt install --no-install-recommends --no-install-suggests -y curl unzip base-files automake base-passwd
      bash coreutils dash debianutils diffutils dpkg e2fsprogs findutils grep gzip hostname ncurses-base tar bsdutils dh-autoreconf dpatch
    - dpkg --add-architecture armhf
    - apt-get update
    - apt-get install -y build-essential crossbuild-essential-armhf
    - apt-get build-dep -y -aarmhf e2guardian
    - git clone https://github.com/raspberrypi/tools.git --depth 1 /tmp/tools
    - export ARCH=arm
    - export CROSS_COMPILE=arm-bcm2708hardfp-linux-gnueabi-
    - cd /tmp/tools/arm-bcm2708/arm-rpi-4.9.3-linux-gnueabihf/bin && ln -s arm-linux-gnueabihf-c++ c++ && ln -s arm-linux-gnueabihf-cc cc && ln -s arm-linux-gnueabihf-cpp cpp && ln -s arm-linux-gnueabihf-g++ g++ && ln -s arm-linux-gnueabihf-gcc gcc
    - cd /builds/fredbcode/e2guardian 
    - ./autogen.sh 
    - ./configure --prefix=/usr --enable-clamd=yes --with-proxyuser=e2guardian --with-proxygroup=e2guardian --sysconfdir=/etc --localstatedir=/var --enable-icap=yes --enable-commandline=yes --enable-email=yes --enable-ntlm=yes --enable-pcre=yes --enable-sslmitm=yes
    - make ARCH=arm CROSS_COMPILE=arm-bcm2708hardfp-linux-gnueabi-
    - file src/e2guardian

##Create Raspbian Package:
#  stage: create-raspbian-package
#  image: amd64/debian:stable
#  variables:
#    PACKPATH: "/builds/fredbcode/e2guardian"
#    PACKDST: "/builds/fredbcode/e2guardian/scripts/debian_package/e2raspbian_package"
#    OS: "raspbian"
#  script:
#    - cd /builds/fredbcode/e2guardian
#    - apt update && apt install --no-install-recommends --no-install-suggests -y curl git ca-certificates lsb-release util-linux binutils
#    - git clone https://github.com/fredbcode/scripts
#    - mkdir -p ${PACKDST}/data/usr/sbin/
#    - cp ${PACKPATH}/src/e2guardian ${PACKDST}/data/usr/sbin/
#    - cp -Rf ${PACKPATH}/configs ${PACKDST}/data/etc/e2guardian/
#    - mkdir -p  ${PACKPATH}/share/e2guardian/languages
#    - cp -Rf ${PACKPATH}/data/languages ${PACKDST}/data/usr/share/e2guardian/
#    - cp ${PACKPATH}/data/*.gif ${PACKDST}/data/usr/share/e2guardian/
#    - cp ${PACKPATH}/data/*swf ${PACKDST}/data/usr/share/e2guardian/
#    - find ${PACKDST}/ -type f -name "Makefil*" -delete
#    - find ${PACKDST}/ -type f -name "*.in" -delete
#    - SIZE=`stat -c %s ${PACKDST}/data` &&  echo $SIZE &&  sed -i "s/Installed-Size:.*$/Installed-Size:\ $SIZE/g" ${PACKDST}/control/control
#    - sed -i "s/Version:.*$/Version:\ ${CI_COMMIT_BRANCH}/g" ${PACKDST}/control/control 
#    - cd ${PACKDST} && cd .. && ./rebuild.sh e2"$OS"_package
#    - git clone -b packages --single-branch https://gitlab.com/fredbcode/e2guardian.git gitpackages
#    - mkdir -p gitpackages/${CI_COMMIT_BRANCH}
#    - mv e2"$OS"_package.deb gitpackages/${CI_COMMIT_BRANCH}/e2"$OS"_${CI_COMMIT_BRANCH}_$(date +%Y%m%d).deb
#    - cd gitpackages/${CI_COMMIT_BRANCH}
#    - git add *.deb
#    - git config --global user.name "${GITLAB_USER_NAME}"
#    - git config --global user.email "${GITLAB_USER_EMAIL}"
#    - git commit -m "Commit "$OS" ${CI_COMMIT_BRANCH} Package" 
#    - git push https://${YOUR_USERNAME}:${PERSONAL_ACCESS_TOKEN}@gitlab.com/fredbcode/e2guardian.git HEAD:packages
#    - rm -rf *
